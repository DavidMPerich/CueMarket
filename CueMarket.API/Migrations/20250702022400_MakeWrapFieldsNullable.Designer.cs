// <auto-generated />
using System;
using CueMarket.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CueMarket.API.Migrations
{
    [DbContext(typeof(CueMarketDbContext))]
    [Migration("20250702022400_MakeWrapFieldsNullable")]
    partial class MakeWrapFieldsNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CueMarket.API.Models.Domain.Bumper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bumpers");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Butt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BumperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ButtCapMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ButtSleeveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollarMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ForearmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingCId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingDId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingEId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WeightBoltId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WrapId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BumperId");

                    b.HasIndex("ButtCapMaterialId");

                    b.HasIndex("ButtSleeveId");

                    b.HasIndex("CollarMaterialId");

                    b.HasIndex("ForearmId");

                    b.HasIndex("RingBId");

                    b.HasIndex("RingCId");

                    b.HasIndex("RingDId");

                    b.HasIndex("RingEId");

                    b.HasIndex("WeightBoltId");

                    b.HasIndex("WrapId");

                    b.ToTable("Butts");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.ButtSleeve", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Design")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ButtSleeves");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Cue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ButtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JointType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ButtId");

                    b.ToTable("Cues");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Ferrule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Capped")
                        .HasColumnType("bit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Ferrules");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Forearm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Design")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Forearms");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25199d2e-f4d8-4a4a-9903-119062f13802"),
                            Name = "Maple",
                            Type = "Shaft"
                        },
                        new
                        {
                            Id = new Guid("3403b28a-0872-4d9b-811a-bb2aabaaa134"),
                            Name = "Ash",
                            Type = "Shaft"
                        },
                        new
                        {
                            Id = new Guid("8e7f04d4-ae1e-4525-8772-f002021f3076"),
                            Name = "Carbon Fiber",
                            Type = "Shaft"
                        },
                        new
                        {
                            Id = new Guid("a295444f-98b0-46a3-9909-3c4bb9decc54"),
                            Name = "Fiberglass",
                            Type = "Shaft"
                        },
                        new
                        {
                            Id = new Guid("b01e022a-19b5-45bd-91b9-0aa16b0fe5cd"),
                            Name = "Ivory",
                            Type = "Ring"
                        },
                        new
                        {
                            Id = new Guid("25fbe48b-c7ac-40d1-a321-c104d28dd801"),
                            Name = "Phenolic Resin",
                            Type = "Ring"
                        },
                        new
                        {
                            Id = new Guid("a57c62b2-d8de-487e-9fb3-4d9ab475f3ba"),
                            Name = "Silver",
                            Type = "Ring"
                        },
                        new
                        {
                            Id = new Guid("f1b2ac72-454e-41d1-98ce-c1ce68ccf3b4"),
                            Name = "Nickel",
                            Type = "Ring"
                        },
                        new
                        {
                            Id = new Guid("8ef1b81a-f23c-48be-b3f9-2dc109ccaa9d"),
                            Name = "Micarta",
                            Type = "Ring"
                        },
                        new
                        {
                            Id = new Guid("7b74a27e-2ecd-4de7-8f80-067a1e554668"),
                            Name = "Wood Veneer",
                            Type = "Ring"
                        },
                        new
                        {
                            Id = new Guid("d3522b74-6896-43a1-9775-0124c5f5c115"),
                            Name = "Brass",
                            Type = "Ring"
                        },
                        new
                        {
                            Id = new Guid("d662a7bf-adaf-41c8-9ded-3347dac55bc4"),
                            Name = "Ivory",
                            Type = "Ferrule"
                        },
                        new
                        {
                            Id = new Guid("4ce5bead-a405-4e85-912e-220d2b3b86b1"),
                            Name = "Juma",
                            Type = "Ferrule"
                        },
                        new
                        {
                            Id = new Guid("95b70cc1-18de-4b93-94b2-d1a9f878a2a3"),
                            Name = "Aegis",
                            Type = "Ferrule"
                        },
                        new
                        {
                            Id = new Guid("c92a68b7-0578-497b-8675-281983e9de79"),
                            Name = "Linen Melamine",
                            Type = "Ferrule"
                        },
                        new
                        {
                            Id = new Guid("64b64d9e-74df-4e28-8cb3-8b7dc1bb5759"),
                            Name = "Ivorine",
                            Type = "Ferrule"
                        },
                        new
                        {
                            Id = new Guid("813b53bb-f442-4282-9d4d-030733c91929"),
                            Name = "Phenolic Resin",
                            Type = "Ferrule"
                        },
                        new
                        {
                            Id = new Guid("318c3630-59ea-4ab0-bc11-7682158e8187"),
                            Name = "Fiber",
                            Type = "Ferrule"
                        },
                        new
                        {
                            Id = new Guid("f86e0b8c-eafa-465c-a2fc-8c4fd73a8cfd"),
                            Name = "Leather (Soft)",
                            Type = "Tip"
                        },
                        new
                        {
                            Id = new Guid("9f4d1f5b-aec7-4268-b9fd-a6e38dec3893"),
                            Name = "Leather (Medium)",
                            Type = "Tip"
                        },
                        new
                        {
                            Id = new Guid("04215709-e8e9-4f52-adaf-8d71c4ed80bd"),
                            Name = "Leather (Hard)",
                            Type = "Tip"
                        },
                        new
                        {
                            Id = new Guid("1aacb15a-b175-4bc9-8906-6c9bd924d501"),
                            Name = "Phenolic",
                            Type = "Tip"
                        },
                        new
                        {
                            Id = new Guid("90f33c74-1d57-4fac-b510-cab28655893f"),
                            Name = "Layered Leather",
                            Type = "Tip"
                        },
                        new
                        {
                            Id = new Guid("470b32e0-dd66-4e81-b00f-da49141186cc"),
                            Name = "Boar Hide",
                            Type = "Tip"
                        },
                        new
                        {
                            Id = new Guid("da3eaf67-5282-41aa-9f16-b33637648f46"),
                            Name = "Cocobolo",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("fc409b0a-7b22-47a2-8068-4ae3c2c06ae0"),
                            Name = "Ebony",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("e1e8987d-9ae5-45d4-8051-e11213494f59"),
                            Name = "Maple",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("c77082af-4d1c-4aa7-887b-ee013676963a"),
                            Name = "Rosewood",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("145f9e1b-7f2f-40b9-9a2f-b5a922b8b0b7"),
                            Name = "Zebrawood",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("0856a0fe-8c7c-4647-8604-02648c476ffe"),
                            Name = "Bocote",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("e18e0c18-0e88-4f46-b375-f1afcd6f7052"),
                            Name = "Birdseye Maple",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("51e48532-da6c-4800-aaec-54c9f47157ee"),
                            Name = "Curly Maple",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("a6d87bc6-8ef2-4bd2-99e3-9b0b80d48224"),
                            Name = "Purpleheart",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("51969122-92e7-4330-8f44-0758259f4e57"),
                            Name = "Snakewood",
                            Type = "Forearm"
                        },
                        new
                        {
                            Id = new Guid("ac7b4058-3cc6-461e-aec6-93d10d7a32f0"),
                            Name = "Irish Linen",
                            Type = "Wrap"
                        },
                        new
                        {
                            Id = new Guid("0b0ece71-056b-4b73-9a36-aaf71229679c"),
                            Name = "Leather",
                            Type = "Wrap"
                        },
                        new
                        {
                            Id = new Guid("77313c18-88ff-4a29-ba07-26d93d38179b"),
                            Name = "Lizard Skin",
                            Type = "Wrap"
                        },
                        new
                        {
                            Id = new Guid("eb056bbc-ff3f-479c-8595-eae1233a59e4"),
                            Name = "Rubber",
                            Type = "Wrap"
                        },
                        new
                        {
                            Id = new Guid("11cfbe35-cf6d-4d10-b14c-759c58b325db"),
                            Name = "No Wrap (Sanded Wood)",
                            Type = "Wrap"
                        },
                        new
                        {
                            Id = new Guid("dff167ba-ae2b-450f-adc9-860581185607"),
                            Name = "Silicone Grip",
                            Type = "Wrap"
                        });
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Ring", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Rings");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Shaft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollarMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FerruleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingAId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CollarMaterialId");

                    b.HasIndex("CueId");

                    b.HasIndex("FerruleId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RingAId");

                    b.HasIndex("TipId");

                    b.ToTable("Shafts");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Tip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hardness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Tips");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.WeightBolt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thread")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeightBolts");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Wrap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Wraps");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Butt", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Bumper", "Bumper")
                        .WithMany()
                        .HasForeignKey("BumperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Material", "ButtCapMaterial")
                        .WithMany()
                        .HasForeignKey("ButtCapMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.ButtSleeve", "ButtSleeve")
                        .WithMany()
                        .HasForeignKey("ButtSleeveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Material", "CollarMaterial")
                        .WithMany()
                        .HasForeignKey("CollarMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Forearm", "Forearm")
                        .WithMany()
                        .HasForeignKey("ForearmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingB")
                        .WithMany()
                        .HasForeignKey("RingBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingC")
                        .WithMany()
                        .HasForeignKey("RingCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingD")
                        .WithMany()
                        .HasForeignKey("RingDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingE")
                        .WithMany()
                        .HasForeignKey("RingEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.WeightBolt", "WeightBolt")
                        .WithMany()
                        .HasForeignKey("WeightBoltId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Wrap", "Wrap")
                        .WithMany()
                        .HasForeignKey("WrapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bumper");

                    b.Navigation("ButtCapMaterial");

                    b.Navigation("ButtSleeve");

                    b.Navigation("CollarMaterial");

                    b.Navigation("Forearm");

                    b.Navigation("RingB");

                    b.Navigation("RingC");

                    b.Navigation("RingD");

                    b.Navigation("RingE");

                    b.Navigation("WeightBolt");

                    b.Navigation("Wrap");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Cue", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Butt", "Butt")
                        .WithMany()
                        .HasForeignKey("ButtId");

                    b.Navigation("Butt");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Ferrule", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Forearm", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Ring", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Shaft", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "CollarMaterial")
                        .WithMany()
                        .HasForeignKey("CollarMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Cue", "Cue")
                        .WithMany("Shafts")
                        .HasForeignKey("CueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ferrule", "Ferrule")
                        .WithMany()
                        .HasForeignKey("FerruleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingA")
                        .WithMany()
                        .HasForeignKey("RingAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Tip", "Tip")
                        .WithMany()
                        .HasForeignKey("TipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollarMaterial");

                    b.Navigation("Cue");

                    b.Navigation("Ferrule");

                    b.Navigation("Material");

                    b.Navigation("RingA");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Tip", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Wrap", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Cue", b =>
                {
                    b.Navigation("Shafts");
                });
#pragma warning restore 612, 618
        }
    }
}
