// <auto-generated />
using System;
using CueMarket.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CueMarket.API.Migrations
{
    [DbContext(typeof(CueMarketDbContext))]
    [Migration("20250701012552_MakeButtSleeveFieldsNullable")]
    partial class MakeButtSleeveFieldsNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CueMarket.API.Models.Domain.Bumper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bumpers");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Butt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BumperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ButtCapMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ButtSleeveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollarMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ForearmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingCId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingDId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingEId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WeightBoltId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WrapId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BumperId");

                    b.HasIndex("ButtCapMaterialId");

                    b.HasIndex("ButtSleeveId");

                    b.HasIndex("CollarMaterialId");

                    b.HasIndex("ForearmId");

                    b.HasIndex("RingBId");

                    b.HasIndex("RingCId");

                    b.HasIndex("RingDId");

                    b.HasIndex("RingEId");

                    b.HasIndex("WeightBoltId");

                    b.HasIndex("WrapId");

                    b.ToTable("Butts");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.ButtSleeve", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Design")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ButtSleeves");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Cue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ButtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JointType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ButtId");

                    b.ToTable("Cues");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Ferrule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Capped")
                        .HasColumnType("bit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Ferrules");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Forearm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Design")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Forearms");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = new Guid("557f813b-8356-4b2f-94e0-c2e2a9e836fb"),
                            Name = "Maple",
                            Type = "Wood"
                        },
                        new
                        {
                            Id = new Guid("3ba8cfa2-f0cd-4e7a-97e7-9223b0477802"),
                            Name = "Ash",
                            Type = "Wood"
                        },
                        new
                        {
                            Id = new Guid("50606191-d2ca-44a7-83f4-4565bd2aa499"),
                            Name = "Bamboo",
                            Type = "Wood"
                        },
                        new
                        {
                            Id = new Guid("8a8aa096-bbf2-4fc9-a1e1-f412fbe1debc"),
                            Name = "Phenolic",
                            Type = "Synthetic"
                        },
                        new
                        {
                            Id = new Guid("9f055de2-bb46-434e-801f-b8bc1e59005b"),
                            Name = "Stainless Steel",
                            Type = "Metal"
                        });
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Ring", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Rings");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Shaft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollarMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FerruleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RingAId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CollarMaterialId");

                    b.HasIndex("CueId");

                    b.HasIndex("FerruleId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RingAId");

                    b.HasIndex("TipId");

                    b.ToTable("Shafts");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Tip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hardness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Tips");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.WeightBolt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thread")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeightBolts");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Wrap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Wraps");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Butt", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Bumper", "Bumper")
                        .WithMany()
                        .HasForeignKey("BumperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Material", "ButtCapMaterial")
                        .WithMany()
                        .HasForeignKey("ButtCapMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.ButtSleeve", "ButtSleeve")
                        .WithMany()
                        .HasForeignKey("ButtSleeveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Material", "CollarMaterial")
                        .WithMany()
                        .HasForeignKey("CollarMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Forearm", "Forearm")
                        .WithMany()
                        .HasForeignKey("ForearmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingB")
                        .WithMany()
                        .HasForeignKey("RingBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingC")
                        .WithMany()
                        .HasForeignKey("RingCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingD")
                        .WithMany()
                        .HasForeignKey("RingDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingE")
                        .WithMany()
                        .HasForeignKey("RingEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.WeightBolt", "WeightBolt")
                        .WithMany()
                        .HasForeignKey("WeightBoltId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Wrap", "Wrap")
                        .WithMany()
                        .HasForeignKey("WrapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bumper");

                    b.Navigation("ButtCapMaterial");

                    b.Navigation("ButtSleeve");

                    b.Navigation("CollarMaterial");

                    b.Navigation("Forearm");

                    b.Navigation("RingB");

                    b.Navigation("RingC");

                    b.Navigation("RingD");

                    b.Navigation("RingE");

                    b.Navigation("WeightBolt");

                    b.Navigation("Wrap");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Cue", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Butt", "Butt")
                        .WithMany()
                        .HasForeignKey("ButtId");

                    b.Navigation("Butt");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Ferrule", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Forearm", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Ring", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Shaft", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "CollarMaterial")
                        .WithMany()
                        .HasForeignKey("CollarMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Cue", "Cue")
                        .WithMany("Shafts")
                        .HasForeignKey("CueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ferrule", "Ferrule")
                        .WithMany()
                        .HasForeignKey("FerruleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Ring", "RingA")
                        .WithMany()
                        .HasForeignKey("RingAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CueMarket.API.Models.Domain.Tip", "Tip")
                        .WithMany()
                        .HasForeignKey("TipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollarMaterial");

                    b.Navigation("Cue");

                    b.Navigation("Ferrule");

                    b.Navigation("Material");

                    b.Navigation("RingA");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Tip", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Wrap", b =>
                {
                    b.HasOne("CueMarket.API.Models.Domain.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CueMarket.API.Models.Domain.Cue", b =>
                {
                    b.Navigation("Shafts");
                });
#pragma warning restore 612, 618
        }
    }
}
